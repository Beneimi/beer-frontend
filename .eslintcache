[{"D:\\Projects\\web-beadando\\beer-fontend\\src\\App.tsx":"1","D:\\Projects\\web-beadando\\beer-fontend\\src\\reportWebVitals.ts":"2","D:\\Projects\\web-beadando\\beer-fontend\\src\\components\\search-component.tsx":"3","D:\\Projects\\web-beadando\\beer-fontend\\src\\components\\update-component.tsx":"4"},{"size":201,"mtime":1608409684344,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1608408699450,"results":"7","hashOfConfig":"6"},{"size":4869,"mtime":1608475124645,"results":"8","hashOfConfig":"6"},{"size":3102,"mtime":1608475359723,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xc0lpk",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\web-beadando\\beer-fontend\\src\\App.tsx",["19"],"D:\\Projects\\web-beadando\\beer-fontend\\src\\reportWebVitals.ts",[],"D:\\Projects\\web-beadando\\beer-fontend\\src\\components\\search-component.tsx",["20"],"import React, { useEffect, useState } from 'react';\r\nimport Update from './update-component';\r\nimport \"../styles/search-styles.css\"\r\n\r\ninterface Beer{\r\n    id: String,\r\n    name: String,\r\n    brewery: String,\r\n    type: String,\r\n    rating: Number \r\n}\r\n\r\nconst Search = () => {\r\n\r\n    const [beerList, setBeerList] = useState<Beer[] | null>(null)\r\n    const [searchAttribute, setSearchAttribute] = useState(\"all\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [editActive, setEditActive] = useState(false)\r\n    const [editBeer, setEditBeer] = useState<Beer>({id: \"\", name:\"\", brewery:\"\",type:\"\", rating:0} as Beer)\r\n    const [beersListed, setBeersListed] = useState(false)\r\n\r\n\r\n\r\n    const baseURL = \"http://localhost:8080/beers/\"\r\n\r\n    const fetching = (url: String) =>{\r\n        fetch(url.toString())\r\n            .then(resp => resp.json())\r\n            .then((data : Beer[]) => setBeerList(data))\r\n    }\r\n\r\n    const addBeer = () => {\r\n        setEditBeer({id: \"\", name:\"\", brewery:\"\",type:\"\", rating:0} as Beer)\r\n        setEditActive(true)\r\n    }\r\n\r\n    \r\n    const search = () => {\r\n\r\n        if(searchAttribute === \"all\"){\r\n            setSearchWord(\"\")\r\n            fetching(baseURL)\r\n            setBeersListed(true)\r\n        }\r\n        else if(searchWord ===\"\"){\r\n            window.alert(\"Search field is empty\")\r\n        }else{\r\n            fetching(baseURL+searchAttribute+\"=\"+searchWord)\r\n            setBeersListed(true)\r\n        }\r\n        setEditActive(false)\r\n    }\r\n\r\n    const onEdit = (event: React.MouseEvent) =>{\r\n\r\n        var beerToEdit = beerList?.find( beer => beer.id == event.currentTarget.id)\r\n\r\n        setEditBeer(beerToEdit as Beer)\r\n        setEditActive(true)\r\n    }\r\n\r\n    const onEditSuccess = () =>{\r\n        setEditActive(false)\r\n        setBeersListed(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      });\r\n\r\n    const renderBeers = () => {\r\n        if(beersListed){\r\n                    return <table id=\"beerTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>Brewery</td>\r\n                        <td>Type</td>\r\n                        <td>Rating</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {beerList?.map( beer => <tr key={beer.id.toString()}><td>{beer.name}</td><td>{beer.brewery}</td><td>{beer.type}</td><td>{beer.rating}</td><td><button id={beer.id.toString()} onClick={onEdit}>Edit</button></td></tr>)}\r\n                </tbody>\r\n            </table>\r\n        }\r\n        return \r\n\r\n    }\r\n\r\n    const renderEditor = () => {\r\n        if(editActive){\r\n            return <Update beer={editBeer} onFinish={onEditSuccess} />\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <div >\r\n        <div id=\"searchContainer\">\r\n            <input type=\"text\" value={searchWord} onKeyDown={e => {if(e.key === 'Enter') {search()}} } onChange={e => setSearchWord((e.target as HTMLInputElement).value)}/>\r\n            <table id=\"attributesTable\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>\r\n                            <input type=\"radio\" name=\"attribute\" value=\"name\" checked={searchAttribute===\"name\"} onChange={e => setSearchAttribute((e.target as HTMLInputElement).value)}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Brewery</td>\r\n                        <td>\r\n                            <input type=\"radio\" name=\"attribute\" value=\"brewery\" checked={searchAttribute===\"brewery\"} onChange={e => setSearchAttribute((e.target as HTMLInputElement).value)} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Type</td>\r\n                        <td>\r\n                            <input type=\"radio\" name=\"attribute\" value=\"type\" checked={searchAttribute===\"type\"} onChange={e => setSearchAttribute((e.target as HTMLInputElement).value)} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>All</td>\r\n                        <td>\r\n                            <input type=\"radio\" name=\"attribute\" value=\"all\" checked={searchAttribute===\"all\"} onChange={e => setSearchAttribute((e.target as HTMLInputElement).value)} />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <input id=\"searchButton\" type=\"button\" value=\"Search\" onClick={search}/>\r\n            <input id=\"addButton\" type=\"button\" value=\"Add Beer\" onClick={addBeer}/>\r\n        </div>\r\n        <div>\r\n            {renderBeers()}\r\n        </div>\r\n        <div>\r\n           {renderEditor()}\r\n        </div>\r\n    </div> \r\n}\r\n\r\nexport default Search","D:\\Projects\\web-beadando\\beer-fontend\\src\\components\\update-component.tsx",["21","22"],{"ruleId":"23","severity":1,"message":"24","line":2,"column":8,"nodeType":"25","messageId":"26","endLine":2,"endColumn":12},{"ruleId":"27","severity":1,"message":"28","line":56,"column":58,"nodeType":"29","messageId":"30","endLine":56,"endColumn":60},{"ruleId":"23","severity":1,"message":"31","line":1,"column":17,"nodeType":"25","messageId":"26","endLine":1,"endColumn":26},{"ruleId":"23","severity":1,"message":"32","line":17,"column":16,"nodeType":"25","messageId":"26","endLine":17,"endColumn":21},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'setId' is assigned a value but never used."]